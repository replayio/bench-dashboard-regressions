name: TypeCheck and report to OpenHands
on:
  pull_request:
jobs:
  typecheck:
    name: Typechecking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install (and cache) PNPM dependencies
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install

      - name: Typecheck and report errors to OpenHands
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let output = '';
            let error = '';

            const options = {};
            options.listeners = {
              stdout: (data) => {
                output += data.toString();
              },
              stderr: (data) => {
                error += data.toString();
              }
            };

            let failed = false;
            try {
              await exec.exec('pnpm', ['run', 'typescript'], options);
            } catch (e) {
              failed = true;
            }

            console.log("TypeScript failed: ", failed);
            console.log("TypeScript outputs: ", output);
            console.log("TypeScript errors: ", error);

            const eventPayload = JSON.parse(
              fs.readFileSync(process.env.GITHUB_EVENT_PATH, "utf8")
            );
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
            const prNumber = eventPayload.pull_request.number;
            const prRevision = eventPayload.pull_request.head.sha;
            console.log("PullRequestData", owner, repo, prNumber, prRevision);

            const prContents = await github.rest.issues.get({
              owner,
              repo,
              issue_number: prNumber,
            });

            console.log("PRContents", prContents.data.title, prContents.data.body);
            console.log("PR Comments:", prContents.data.comments);
